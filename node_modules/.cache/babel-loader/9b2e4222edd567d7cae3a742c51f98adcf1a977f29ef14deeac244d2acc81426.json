{"ast":null,"code":"var _jsxFileName = \"D:\\\\GUSTAVO\\\\minimap\\\\src\\\\components\\\\Plane.js\",\n  _s = $RefreshSig$();\nimport * as THREE from \"three\";\nimport React, { forwardRef, useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport \"./CustomMaterial\";\nimport { useBlock } from \"../blocks\";\nimport state from \"../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n  let {\n    color = \"white\",\n    shift = 100,\n    opacity = 1,\n    args,\n    map,\n    ...props\n  } = _ref;\n  const {\n    viewportWidth,\n    offsetFactor\n  } = useBlock();\n  const material = useRef();\n  let last = state.top.current;\n  useFrame(() => {\n    const {\n      pages,\n      top\n    } = state;\n    material.current.scale = THREE.MathUtils.lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportWidth), 0.1);\n    material.current.shift = THREE.MathUtils.lerp(material.current.shift, -(top.current - last) / shift, 0.1);\n    last = top.current;\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: args\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"customMaterial\", {\n      ref: material,\n      color: color,\n      map: map,\n      \"map-minFilter\": THREE.LinearFilter,\n      transparent: true,\n      opacity: opacity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}, \"9K4P/bOUjB1cPQbOTyGFTXyhfOE=\", false, function () {\n  return [useBlock, useFrame];\n})), \"9K4P/bOUjB1cPQbOTyGFTXyhfOE=\", false, function () {\n  return [useBlock, useFrame];\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"%default%$forwardRef\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["THREE","React","forwardRef","useRef","useFrame","useBlock","state","jsxDEV","_jsxDEV","_c2","_s","_c","_ref","ref","color","shift","opacity","args","map","props","viewportWidth","offsetFactor","material","last","top","current","pages","scale","MathUtils","lerp","children","fileName","_jsxFileName","lineNumber","columnNumber","LinearFilter","transparent","$RefreshReg$"],"sources":["D:/GUSTAVO/minimap/src/components/Plane.js"],"sourcesContent":["import * as THREE from \"three\"\nimport React, { forwardRef, useRef } from \"react\"\nimport { useFrame } from \"@react-three/fiber\"\nimport \"./CustomMaterial\"\nimport { useBlock } from \"../blocks\"\nimport state from \"../store\"\n\nexport default forwardRef(({ color = \"white\", shift = 100, opacity = 1, args, map, ...props }, ref) => {\n  const { viewportWidth, offsetFactor } = useBlock()\n  const material = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    const { pages, top } = state\n    material.current.scale = THREE.MathUtils.lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportWidth), 0.1)\n    material.current.shift = THREE.MathUtils.lerp(material.current.shift, -(top.current - last) / shift, 0.1)\n    last = top.current\n  })\n  return (\n    <mesh ref={ref} {...props}>\n      <planeGeometry args={args} />\n      <customMaterial ref={material} color={color} map={map} map-minFilter={THREE.LinearFilter} transparent opacity={opacity} />\n    </mesh>\n  )\n})\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,IAAIC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACjD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAO,kBAAkB;AACzB,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAOC,KAAK,MAAM,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAAC,GAAA,gBAAAC,EAAA,eAAeR,UAAU,CAAAS,EAAA,GAAAD,EAAA,CAAC,CAAAE,IAAA,EAAqEC,GAAG,KAAK;EAAAH,EAAA;EAAA,IAA5E;IAAEI,KAAK,GAAG,OAAO;IAAEC,KAAK,GAAG,GAAG;IAAEC,OAAO,GAAG,CAAC;IAAEC,IAAI;IAAEC,GAAG;IAAE,GAAGC;EAAM,CAAC,GAAAP,IAAA;EAC3F,MAAM;IAAEQ,aAAa;IAAEC;EAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAClD,MAAMiB,QAAQ,GAAGnB,MAAM,CAAC,CAAC;EACzB,IAAIoB,IAAI,GAAGjB,KAAK,CAACkB,GAAG,CAACC,OAAO;EAC5BrB,QAAQ,CAAC,MAAM;IACb,MAAM;MAAEsB,KAAK;MAAEF;IAAI,CAAC,GAAGlB,KAAK;IAC5BgB,QAAQ,CAACG,OAAO,CAACE,KAAK,GAAG3B,KAAK,CAAC4B,SAAS,CAACC,IAAI,CAACP,QAAQ,CAACG,OAAO,CAACE,KAAK,EAAEN,YAAY,GAAGG,GAAG,CAACC,OAAO,IAAI,CAACC,KAAK,GAAG,CAAC,IAAIN,aAAa,CAAC,EAAE,GAAG,CAAC;IACtIE,QAAQ,CAACG,OAAO,CAACV,KAAK,GAAGf,KAAK,CAAC4B,SAAS,CAACC,IAAI,CAACP,QAAQ,CAACG,OAAO,CAACV,KAAK,EAAE,EAAES,GAAG,CAACC,OAAO,GAAGF,IAAI,CAAC,GAAGR,KAAK,EAAE,GAAG,CAAC;IACzGQ,IAAI,GAAGC,GAAG,CAACC,OAAO;EACpB,CAAC,CAAC;EACF,oBACEjB,OAAA;IAAMK,GAAG,EAAEA,GAAI;IAAA,GAAKM,KAAK;IAAAW,QAAA,gBACvBtB,OAAA;MAAeS,IAAI,EAAEA;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7B1B,OAAA;MAAgBK,GAAG,EAAES,QAAS;MAACR,KAAK,EAAEA,KAAM;MAACI,GAAG,EAAEA,GAAI;MAAC,iBAAelB,KAAK,CAACmC,YAAa;MAACC,WAAW;MAACpB,OAAO,EAAEA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtH,CAAC;AAEX,CAAC;EAAA,QAfyC7B,QAAQ,EAGhDD,QAAQ;AAAA,EAYT,CAAC;EAAA,QAfwCC,QAAQ,EAGhDD,QAAQ;AAAA;AAYR,IAAAO,EAAA,EAAAF,GAAA;AAAA4B,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAA5B,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}