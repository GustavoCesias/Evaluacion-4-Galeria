{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { MapControls as MapControls$1 } from 'three-stdlib';\nconst MapControls = /*#__PURE__*/React.forwardRef(function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    enableDamping: true\n  };\n  let ref = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    camera,\n    onChange,\n    onStart,\n    onEnd,\n    ...rest\n  } = props;\n  const invalidate = useThree(_ref => {\n    let {\n      invalidate\n    } = _ref;\n    return invalidate;\n  });\n  const defaultCamera = useThree(_ref2 => {\n    let {\n      camera\n    } = _ref2;\n    return camera;\n  });\n  const domElement = useThree(_ref3 => {\n    let {\n      gl\n    } = _ref3;\n    return gl.domElement;\n  });\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new MapControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    controls.connect(domElement);\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.dispose();\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, domElement]);\n  useFrame(() => controls.update());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    dispose: undefined,\n    object: controls,\n    enableDamping: true\n  }, rest));\n});\nexport { MapControls };","map":{"version":3,"names":["_extends","useThree","useFrame","React","MapControls","MapControls$1","forwardRef","props","arguments","length","undefined","enableDamping","ref","camera","onChange","onStart","onEnd","rest","invalidate","_ref","defaultCamera","_ref2","domElement","_ref3","gl","explCamera","controls","useMemo","useEffect","connect","callback","e","addEventListener","dispose","removeEventListener","update","createElement","object"],"sources":["D:/GUSTAVO/minimap/node_modules/@react-three/drei/core/MapControls.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { MapControls as MapControls$1 } from 'three-stdlib';\n\nconst MapControls = /*#__PURE__*/React.forwardRef((props = {\n  enableDamping: true\n}, ref) => {\n  const {\n    camera,\n    onChange,\n    onStart,\n    onEnd,\n    ...rest\n  } = props;\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const domElement = useThree(({\n    gl\n  }) => gl.domElement);\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new MapControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    controls.connect(domElement);\n\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.dispose();\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, domElement]);\n  useFrame(() => controls.update());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    dispose: undefined,\n    object: controls,\n    enableDamping: true\n  }, rest));\n});\n\nexport { MapControls };\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,oBAAoB;AACvD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,IAAIC,aAAa,QAAQ,cAAc;AAE3D,MAAMD,WAAW,GAAG,aAAaD,KAAK,CAACG,UAAU,CAAC,YAEvC;EAAA,IAFwCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IACzDG,aAAa,EAAE;EACjB,CAAC;EAAA,IAAEC,GAAG,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACJ,MAAM;IACJG,MAAM;IACNC,QAAQ;IACRC,OAAO;IACPC,KAAK;IACL,GAAGC;EACL,CAAC,GAAGV,KAAK;EACT,MAAMW,UAAU,GAAGjB,QAAQ,CAACkB,IAAA;IAAA,IAAC;MAC3BD;IACF,CAAC,GAAAC,IAAA;IAAA,OAAKD,UAAU;EAAA,EAAC;EACjB,MAAME,aAAa,GAAGnB,QAAQ,CAACoB,KAAA;IAAA,IAAC;MAC9BR;IACF,CAAC,GAAAQ,KAAA;IAAA,OAAKR,MAAM;EAAA,EAAC;EACb,MAAMS,UAAU,GAAGrB,QAAQ,CAACsB,KAAA;IAAA,IAAC;MAC3BC;IACF,CAAC,GAAAD,KAAA;IAAA,OAAKC,EAAE,CAACF,UAAU;EAAA,EAAC;EACpB,MAAMG,UAAU,GAAGZ,MAAM,IAAIO,aAAa;EAC1C,MAAMM,QAAQ,GAAGvB,KAAK,CAACwB,OAAO,CAAC,MAAM,IAAItB,aAAa,CAACoB,UAAU,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EACjFtB,KAAK,CAACyB,SAAS,CAAC,MAAM;IACpBF,QAAQ,CAACG,OAAO,CAACP,UAAU,CAAC;IAE5B,MAAMQ,QAAQ,GAAGC,CAAC,IAAI;MACpBb,UAAU,CAAC,CAAC;MACZ,IAAIJ,QAAQ,EAAEA,QAAQ,CAACiB,CAAC,CAAC;IAC3B,CAAC;IAEDL,QAAQ,CAACM,gBAAgB,CAAC,QAAQ,EAAEF,QAAQ,CAAC;IAC7C,IAAIf,OAAO,EAAEW,QAAQ,CAACM,gBAAgB,CAAC,OAAO,EAAEjB,OAAO,CAAC;IACxD,IAAIC,KAAK,EAAEU,QAAQ,CAACM,gBAAgB,CAAC,KAAK,EAAEhB,KAAK,CAAC;IAClD,OAAO,MAAM;MACXU,QAAQ,CAACO,OAAO,CAAC,CAAC;MAClBP,QAAQ,CAACQ,mBAAmB,CAAC,QAAQ,EAAEJ,QAAQ,CAAC;MAChD,IAAIf,OAAO,EAAEW,QAAQ,CAACQ,mBAAmB,CAAC,OAAO,EAAEnB,OAAO,CAAC;MAC3D,IAAIC,KAAK,EAAEU,QAAQ,CAACQ,mBAAmB,CAAC,KAAK,EAAElB,KAAK,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAACF,QAAQ,EAAEC,OAAO,EAAEC,KAAK,EAAEU,QAAQ,EAAER,UAAU,EAAEI,UAAU,CAAC,CAAC;EAChEpB,QAAQ,CAAC,MAAMwB,QAAQ,CAACS,MAAM,CAAC,CAAC,CAAC;EACjC,OAAO,aAAahC,KAAK,CAACiC,aAAa,CAAC,WAAW,EAAEpC,QAAQ,CAAC;IAC5DY,GAAG,EAAEA,GAAG;IACRqB,OAAO,EAAEvB,SAAS;IAClB2B,MAAM,EAAEX,QAAQ;IAChBf,aAAa,EAAE;EACjB,CAAC,EAAEM,IAAI,CAAC,CAAC;AACX,CAAC,CAAC;AAEF,SAASb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}