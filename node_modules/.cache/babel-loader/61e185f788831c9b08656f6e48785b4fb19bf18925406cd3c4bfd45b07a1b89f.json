{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nconst color = new THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    context,\n    children,\n    ...props\n  } = _ref;\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n  let {\n    children,\n    range,\n    limit = 1000,\n    frames = Infinity,\n    ...props\n  } = _ref2;\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useLayoutEffect(() => {\n    parentRef.current.count = parentRef.current.instanceMatrix.updateRange.count = parentRef.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n  }, [instances, range]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        if (!instanceMatrix.equals(tempMatrix.fromArray(matrices, i * 16))) {\n          instanceMatrix.toArray(matrices, i * 16);\n          parentRef.current.instanceMatrix.needsUpdate = true;\n        }\n        if (!instanceRef.color.equals(color.fromArray(colors, i * 3))) {\n          instanceRef.color.toArray(colors, i * 3);\n          parentRef.current.instanceColor.needsUpdate = true;\n        }\n      }\n      count++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\nfunction Merged(_ref3) {\n  let {\n    meshes,\n    children,\n    ...props\n  } = _ref3;\n  const isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(_ref4 => {\n      let {\n        geometry,\n        material\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(Instances, _extends({\n        key: geometry.uuid,\n        geometry: geometry,\n        material: material\n      }, props));\n    })\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({\n    ...acc,\n    [key]: args[i]\n  }), {})));\n}\nexport { Instance, Instances, Merged };","map":{"version":3,"names":["_extends","THREE","React","extend","useFrame","mergeRefs","Composer","Position","i","instanceRef","globalContext","createContext","parentMatrix","Matrix4","instanceMatrix","tempMatrix","color","Color","translation","Vector3","rotation","Quaternion","scale","Instance","forwardRef","_ref","ref","context","children","props","useMemo","group","useRef","subscribe","getParent","useContext","useLayoutEffect","createElement","instance","instanceKey","Instances","_ref2","range","limit","frames","Infinity","useState","parentRef","instances","setInstances","matrices","colors","mArray","Float32Array","identity","toArray","Array","map","current","count","updateRange","instanceColor","Math","min","undefined","length","useEffect","needsUpdate","updateMatrix","updateMatrixWorld","copy","matrixWorld","invert","decompose","compose","premultiply","equals","fromArray","api","filter","item","userData","matrixAutoUpdate","args","raycast","attach","array","itemSize","usage","DynamicDrawUsage","Provider","value","Merged","_ref3","meshes","isArray","key","Object","keys","isMesh","components","values","_ref4","geometry","material","uuid","reduce","acc"],"sources":["D:/GUSTAVO/minimap/node_modules/@react-three/drei/core/Instances.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\n\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nconst color = new THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useLayoutEffect(() => {\n    parentRef.current.count = parentRef.current.instanceMatrix.updateRange.count = parentRef.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n  }, [instances, range]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n\n        if (!instanceMatrix.equals(tempMatrix.fromArray(matrices, i * 16))) {\n          instanceMatrix.toArray(matrices, i * 16);\n          parentRef.current.instanceMatrix.needsUpdate = true;\n        }\n\n        if (!instanceRef.color.equals(color.fromArray(colors, i * 3))) {\n          instanceRef.color.toArray(colors, i * 3);\n          parentRef.current.instanceColor.needsUpdate = true;\n        }\n      }\n\n      count++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n\nfunction Merged({\n  meshes,\n  children,\n  ...props\n}) {\n  const isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({ ...acc,\n    [key]: args[i]\n  }), {})));\n}\n\nexport { Instance, Instances, Merged };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}