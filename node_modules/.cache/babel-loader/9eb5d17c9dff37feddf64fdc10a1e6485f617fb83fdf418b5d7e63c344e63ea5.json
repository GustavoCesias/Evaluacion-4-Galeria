{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Shape } from 'three';\nconst eps = 0.00001;\nfunction createShape(width, height, radius0) {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);\n  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n  return shape;\n}\nconst RoundedBox = /*#__PURE__*/React.forwardRef(function RoundedBox(_ref, ref) {\n  let {\n    args: [width = 1, height = 1, depth = 1] = [],\n    radius = 0.05,\n    smoothness = 4,\n    children,\n    ...rest\n  } = _ref;\n  const shape = React.useMemo(() => createShape(width, height, radius), [width, height, radius]);\n  const params = React.useMemo(() => ({\n    depth: depth - radius * 2,\n    bevelEnabled: true,\n    bevelSegments: smoothness * 2,\n    steps: 1,\n    bevelSize: radius - eps,\n    bevelThickness: radius,\n    curveSegments: smoothness\n  }), [depth, radius, smoothness]);\n  const geomRef = React.useRef();\n  React.useLayoutEffect(() => {\n    if (geomRef.current) {\n      geomRef.current.center();\n    }\n  }, [shape, params]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"extrudeBufferGeometry\", {\n    attach: \"geometry\",\n    ref: geomRef,\n    args: [shape, params]\n  }), children);\n});\nexport { RoundedBox };","map":{"version":3,"names":["_extends","React","Shape","eps","createShape","width","height","radius0","shape","radius","absarc","Math","PI","RoundedBox","forwardRef","_ref","ref","args","depth","smoothness","children","rest","useMemo","params","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","curveSegments","geomRef","useRef","useLayoutEffect","current","center","createElement","attach"],"sources":["D:/GUSTAVO/minimap/node_modules/@react-three/drei/core/RoundedBox.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Shape } from 'three';\n\nconst eps = 0.00001;\n\nfunction createShape(width, height, radius0) {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);\n  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n  return shape;\n}\n\nconst RoundedBox = /*#__PURE__*/React.forwardRef(function RoundedBox({\n  args: [width = 1, height = 1, depth = 1] = [],\n  radius = 0.05,\n  smoothness = 4,\n  children,\n  ...rest\n}, ref) {\n  const shape = React.useMemo(() => createShape(width, height, radius), [width, height, radius]);\n  const params = React.useMemo(() => ({\n    depth: depth - radius * 2,\n    bevelEnabled: true,\n    bevelSegments: smoothness * 2,\n    steps: 1,\n    bevelSize: radius - eps,\n    bevelThickness: radius,\n    curveSegments: smoothness\n  }), [depth, radius, smoothness]);\n  const geomRef = React.useRef();\n  React.useLayoutEffect(() => {\n    if (geomRef.current) {\n      geomRef.current.center();\n    }\n  }, [shape, params]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"extrudeBufferGeometry\", {\n    attach: \"geometry\",\n    ref: geomRef,\n    args: [shape, params]\n  }), children);\n});\n\nexport { RoundedBox };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}